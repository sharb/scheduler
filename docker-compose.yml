version: "3.2"
services:
  scheduler-test:
    build: ./scheduler
    container_name: scheduler-test
    command: /bin/bash -c "pytest; flake8 --config flake8.ini"
    volumes:
      - ./scheduler:/app
      - ~/.aws:/root/.aws
    environment:
      - APP_NAME=scheduler
      - SQLITE_DB=sqlite:///database_test.sqlite
    
  scheduler-dev:
    build: ./scheduler
    container_name: scheduler-dev
    command: /bin/bash -c "python3 run.py"
    volumes:
      - ./scheduler:/app
      - ~/.aws:/root/.aws
    environment:
      - APP_NAME=scheduler
      - SQLITE_DB=sqlite:///database.sqlite
    ports:
      - "8080:8080"

  scheduler-prod:
    build: ./scheduler
    container_name: scheduler-prod
    command: /bin/bash -c "uwsgi app.ini"
    restart: always
    volumes:
      - ./scheduler:/app
      - ~/.aws:/root/.aws
    environment:
      - APP_NAME=scheduler
      - SQLITE_DB=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgresdb:5432/scheduler-jobs
    expose:
      - 8080
    depends_on:
      - nginx
      - postgresdb

  nginx:
    build: ./nginx
    container_name: nginx
    restart: always
    ports:
      - "80:80"

  postgresdb:
    image: postgres:10.6
    container_name: postgresdb
    restart: on-failure:3 
    expose:
      - 5432
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: scheduler-jobs
    volumes:
      -  ./db-data:/var/lib/postgresql/data

  scheduler-deploy:
    build: ./terraform
    container_name: scheduler-deploy
    command: |
          /bin/sh -c \
          "cd workspace; \
          terraform init; \
          terraform plan -target aws_instance.scheduler-api; \
          terraform apply -target aws_instance.scheduler-api -auto-approve"
    volumes:
      - ./terraform:/workspace
      - ~/.aws:/root/.aws

